{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n// Material imports\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n// Components\nimport { TaskListComponent } from './task-list.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\n// Routes for task list feature\nconst routes = [{\n  path: '',\n  component: TaskListComponent\n}];\n/**\n * Task List feature module\n */\nexport class TaskListModule {\n  static {\n    this.ɵfac = function TaskListModule_Factory(t) {\n      return new (t || TaskListModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: TaskListModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [CommonModule, ReactiveFormsModule, RouterModule.forChild(routes),\n      // Material modules\n      MatCardModule, MatButtonModule, MatIconModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatChipsModule, MatMenuModule, MatProgressSpinnerModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TaskListModule, {\n    declarations: [TaskListComponent],\n    imports: [CommonModule, ReactiveFormsModule, i1.RouterModule,\n    // Material modules\n    MatCardModule, MatButtonModule, MatIconModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatChipsModule, MatMenuModule, MatProgressSpinnerModule]\n  });\n})();","map":{"version":3,"names":["CommonModule","RouterModule","ReactiveFormsModule","MatCardModule","MatButtonModule","MatIconModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatChipsModule","MatMenuModule","MatProgressSpinnerModule","TaskListComponent","routes","path","component","TaskListModule","forChild","declarations","imports","i1"],"sources":["C:\\Users\\Asus\\Documents\\GitHub\\task-management-application\\client\\src\\app\\features\\tasks\\task-list\\task-list.module.ts"],"sourcesContent":["/**\n * Task List module\n * Handles task listing and management\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// Material imports\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n// Components\nimport { TaskListComponent } from './task-list.component';\n\n// Routes for task list feature\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskListComponent\n  }\n];\n\n/**\n * Task List feature module\n */\n@NgModule({\n  declarations: [\n    TaskListComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    // Material modules\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatMenuModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class TaskListModule { }\n"],"mappings":"AAKA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAgB,iBAAiB;AACtD,SAASC,mBAAmB,QAAQ,gBAAgB;AAEpD;AACA,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,wBAAwB,QAAQ,oCAAoC;AAE7E;AACA,SAASC,iBAAiB,QAAQ,uBAAuB;;;AAEzD;AACA,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEH;CACZ,CACF;AAED;;;AAuBA,OAAM,MAAOI,cAAc;;;uBAAdA,cAAc;IAAA;EAAA;;;YAAdA;IAAc;EAAA;;;gBAfvBhB,YAAY,EACZE,mBAAmB,EACnBD,YAAY,CAACgB,QAAQ,CAACJ,MAAM,CAAC;MAC7B;MACAV,aAAa,EACbC,eAAe,EACfC,aAAa,EACbC,kBAAkB,EAClBC,cAAc,EACdC,eAAe,EACfC,cAAc,EACdC,aAAa,EACbC,wBAAwB;IAAA;EAAA;;;2EAGfK,cAAc;IAAAE,YAAA,GAlBvBN,iBAAiB;IAAAO,OAAA,GAGjBnB,YAAY,EACZE,mBAAmB,EAAAkB,EAAA,CAAAnB,YAAA;IAEnB;IACAE,aAAa,EACbC,eAAe,EACfC,aAAa,EACbC,kBAAkB,EAClBC,cAAc,EACdC,eAAe,EACfC,cAAc,EACdC,aAAa,EACbC,wBAAwB;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}