{"ast":null,"code":"/**\n * Header component\n * Main navigation header for the application\n */\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/menu\";\nfunction HeaderComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 6)(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"list\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 7);\n    i0.ɵɵtext(5, \"Tasks\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"button\", 8)(7, \"mat-icon\");\n    i0.ɵɵtext(8, \"account_circle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"span\", 7);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-icon\");\n    i0.ɵɵtext(12, \"arrow_drop_down\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"mat-menu\", null, 9)(15, \"button\", 10)(16, \"mat-icon\");\n    i0.ɵɵtext(17, \"person\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"span\");\n    i0.ɵɵtext(19, \"Profile\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function HeaderComponent_ng_container_8_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onLogout());\n    });\n    i0.ɵɵelementStart(21, \"mat-icon\");\n    i0.ɵɵtext(22, \"exit_to_app\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"span\");\n    i0.ɵɵtext(24, \"Logout\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(14);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.userName);\n  }\n}\nfunction HeaderComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 12)(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 7);\n    i0.ɵɵtext(5, \"Login\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"button\", 13)(7, \"mat-icon\");\n    i0.ɵɵtext(8, \"person_add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"span\", 7);\n    i0.ɵɵtext(10, \"Register\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n/**\n * Header component\n * Contains the main navigation and user controls\n */\nexport class HeaderComponent {\n  /**\n   * Constructor\n   * @param authService Authentication service\n   * @param router Angular router\n   */\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    /**\n     * Event emitter for toggling the sidenav\n     */\n    this.toggleSidenav = new EventEmitter();\n    /**\n     * Flag to track if user is authenticated\n     */\n    this.isAuthenticated = false;\n    /**\n     * User's name for display\n     */\n    this.userName = '';\n  }\n  /**\n   * Lifecycle hook that is called after component initialization\n   * Subscribes to authentication state changes\n   */\n  ngOnInit() {\n    this.authSubscription = this.authService.user.subscribe(user => {\n      // Update authentication state\n      this.isAuthenticated = !!user;\n      // Update user name if authenticated\n      if (user) {\n        this.userName = user.name;\n      }\n    });\n  }\n  /**\n   * Lifecycle hook that is called when component is destroyed\n   * Cleans up subscriptions to prevent memory leaks\n   */\n  ngOnDestroy() {\n    if (this.authSubscription) {\n      this.authSubscription.unsubscribe();\n    }\n  }\n  /**\n   * Emit event to toggle sidenav\n   */\n  onToggleSidenav() {\n    this.toggleSidenav.emit();\n  }\n  /**\n   * Handle user logout\n   */\n  onLogout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n  static {\n    this.ɵfac = function HeaderComponent_Factory(t) {\n      return new (t || HeaderComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HeaderComponent,\n      selectors: [[\"app-header\"]],\n      outputs: {\n        toggleSidenav: \"toggleSidenav\"\n      },\n      decls: 10,\n      vars: 2,\n      consts: [[\"color\", \"primary\", 1, \"header\"], [1, \"header-left\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Toggle navigation menu\", 3, \"click\"], [\"routerLink\", \"/\", 1, \"app-title\"], [1, \"header-right\"], [4, \"ngIf\"], [\"mat-button\", \"\", \"routerLink\", \"/tasks\", \"routerLinkActive\", \"active\"], [1, \"nav-label\"], [\"mat-button\", \"\", 1, \"user-menu-button\", 3, \"matMenuTriggerFor\"], [\"userMenu\", \"matMenu\"], [\"mat-menu-item\", \"\", \"routerLink\", \"/profile\"], [\"mat-menu-item\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"routerLink\", \"/login\", \"routerLinkActive\", \"active\"], [\"mat-button\", \"\", \"routerLink\", \"/register\", \"routerLinkActive\", \"active\"]],\n      template: function HeaderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"div\", 1)(2, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function HeaderComponent_Template_button_click_2_listener() {\n            return ctx.onToggleSidenav();\n          });\n          i0.ɵɵelementStart(3, \"mat-icon\");\n          i0.ɵɵtext(4, \"menu\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"span\", 3);\n          i0.ɵɵtext(6, \"Task Management\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 4);\n          i0.ɵɵtemplate(8, HeaderComponent_ng_container_8_Template, 25, 2, \"ng-container\", 5);\n          i0.ɵɵtemplate(9, HeaderComponent_ng_container_9_Template, 11, 0, \"ng-container\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.isAuthenticated);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isAuthenticated);\n        }\n      },\n      dependencies: [i3.NgIf, i2.RouterLink, i2.RouterLinkActive, i4.MatToolbar, i5.MatButton, i5.MatIconButton, i6.MatIcon, i7.MatMenu, i7.MatMenuItem, i7.MatMenuTrigger],\n      styles: [\"\\n\\n.header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  height: 64px;\\n  padding: 0 16px;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1000;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n\\n\\n\\n.header-left[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n\\n\\n.app-title[_ngcontent-%COMP%] {\\n  margin-left: 16px;\\n  font-size: 20px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  outline: none;\\n}\\n\\n\\n\\n.header-right[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n\\n\\n.nav-label[_ngcontent-%COMP%] {\\n  margin-left: 8px;\\n}\\n\\n\\n\\n.active[_ngcontent-%COMP%] {\\n  background-color: rgba(255, 255, 255, 0.15);\\n}\\n\\n\\n\\n.user-menu-button[_ngcontent-%COMP%] {\\n  margin-left: 8px;\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .nav-label[_ngcontent-%COMP%] {\\n    display: none;\\n  }\\n  .app-title[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29yZS9jb21wb25lbnRzL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0JBQUE7QUFDQTtFQUNFLGFBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLE1BQUE7RUFDQSxhQUFBO0VBQ0Esd0NBQUE7QUFDRjs7QUFFQSx3QkFBQTtBQUNBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUEsY0FBQTtBQUNBO0VBQ0UsaUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsYUFBQTtBQUNGOztBQUVBLHlCQUFBO0FBQ0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFFQSxxQkFBQTtBQUNBO0VBQ0UsZ0JBQUE7QUFDRjs7QUFFQSx3QkFBQTtBQUNBO0VBQ0UsMkNBQUE7QUFDRjs7QUFFQSxxQkFBQTtBQUNBO0VBQ0UsZ0JBQUE7QUFDRjs7QUFFQSxzQ0FBQTtBQUNBO0VBQ0U7SUFDRSxhQUFBO0VBQ0Y7RUFFQTtJQUNFLGVBQUE7RUFBRjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyogSGVhZGVyIHN0eWxlcyAqL1xuLmhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiA2NHB4O1xuICBwYWRkaW5nOiAwIDE2cHg7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTAwMDtcbiAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cblxuLyogTGVmdCBzaWRlIG9mIGhlYWRlciAqL1xuLmhlYWRlci1sZWZ0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLyogQXBwIHRpdGxlICovXG4uYXBwLXRpdGxlIHtcbiAgbWFyZ2luLWxlZnQ6IDE2cHg7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvdXRsaW5lOiBub25lO1xufVxuXG4vKiBSaWdodCBzaWRlIG9mIGhlYWRlciAqL1xuLmhlYWRlci1yaWdodCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi8qIE5hdmlnYXRpb24gbGlua3MgKi9cbi5uYXYtbGFiZWwge1xuICBtYXJnaW4tbGVmdDogOHB4O1xufVxuXG4vKiBBY3RpdmUgbGluayBzdHlsaW5nICovXG4uYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KTtcbn1cblxuLyogVXNlciBtZW51IGJ1dHRvbiAqL1xuLnVzZXItbWVudS1idXR0b24ge1xuICBtYXJnaW4tbGVmdDogOHB4O1xufVxuXG4vKiBNZWRpYSBxdWVyeSBmb3IgcmVzcG9uc2l2ZSBkZXNpZ24gKi9cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAubmF2LWxhYmVsIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIFxuICAuYXBwLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","HeaderComponent_ng_container_8_Template_button_click_20_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","onLogout","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","_r2","ɵɵtextInterpolate","ctx_r0","userName","HeaderComponent","constructor","authService","router","toggleSidenav","isAuthenticated","ngOnInit","authSubscription","user","subscribe","name","ngOnDestroy","unsubscribe","onToggleSidenav","emit","logout","navigate","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","outputs","decls","vars","consts","template","HeaderComponent_Template","rf","ctx","HeaderComponent_Template_button_click_2_listener","ɵɵtemplate","HeaderComponent_ng_container_8_Template","HeaderComponent_ng_container_9_Template"],"sources":["C:\\Users\\Asus\\Documents\\GitHub\\task-management-application\\client\\src\\app\\core\\components\\header\\header.component.ts","C:\\Users\\Asus\\Documents\\GitHub\\task-management-application\\client\\src\\app\\core\\components\\header\\header.component.html"],"sourcesContent":["/**\n * Header component\n * Main navigation header for the application\n */\nimport { Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * Header component\n * Contains the main navigation and user controls\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  /**\n   * Event emitter for toggling the sidenav\n   */\n  @Output() toggleSidenav = new EventEmitter<void>();\n  \n  /**\n   * Flag to track if user is authenticated\n   */\n  isAuthenticated = false;\n  \n  /**\n   * User's name for display\n   */\n  userName = '';\n  \n  /**\n   * Subscription to auth state changes\n   */\n  private authSubscription!: Subscription;\n  \n  /**\n   * Constructor\n   * @param authService Authentication service\n   * @param router Angular router\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n  \n  /**\n   * Lifecycle hook that is called after component initialization\n   * Subscribes to authentication state changes\n   */\n  ngOnInit(): void {\n    this.authSubscription = this.authService.user.subscribe(user => {\n      // Update authentication state\n      this.isAuthenticated = !!user;\n      \n      // Update user name if authenticated\n      if (user) {\n        this.userName = user.name;\n      }\n    });\n  }\n  \n  /**\n   * Lifecycle hook that is called when component is destroyed\n   * Cleans up subscriptions to prevent memory leaks\n   */\n  ngOnDestroy(): void {\n    if (this.authSubscription) {\n      this.authSubscription.unsubscribe();\n    }\n  }\n  \n  /**\n   * Emit event to toggle sidenav\n   */\n  onToggleSidenav(): void {\n    this.toggleSidenav.emit();\n  }\n  \n  /**\n   * Handle user logout\n   */\n  onLogout(): void {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<!-- Header toolbar -->\n<mat-toolbar color=\"primary\" class=\"header\">\n  <!-- Left side: Menu toggle and app title -->\n  <div class=\"header-left\">\n    <!-- Menu toggle button -->\n    <button mat-icon-button (click)=\"onToggleSidenav()\" aria-label=\"Toggle navigation menu\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    \n    <!-- App title -->\n    <span class=\"app-title\" routerLink=\"/\">Task Management</span>\n  </div>\n  \n  <!-- Right side: Navigation and user actions -->\n  <div class=\"header-right\">\n    <!-- Navigation links for authenticated users -->\n    <ng-container *ngIf=\"isAuthenticated\">\n      <button mat-button routerLink=\"/tasks\" routerLinkActive=\"active\">\n        <mat-icon>list</mat-icon>\n        <span class=\"nav-label\">Tasks</span>\n      </button>\n      \n      <button mat-button [matMenuTriggerFor]=\"userMenu\" class=\"user-menu-button\">\n        <mat-icon>account_circle</mat-icon>\n        <span class=\"nav-label\">{{ userName }}</span>\n        <mat-icon>arrow_drop_down</mat-icon>\n      </button>\n      \n      <!-- User dropdown menu -->\n      <mat-menu #userMenu=\"matMenu\">\n        <button mat-menu-item routerLink=\"/profile\">\n          <mat-icon>person</mat-icon>\n          <span>Profile</span>\n        </button>\n        <button mat-menu-item (click)=\"onLogout()\">\n          <mat-icon>exit_to_app</mat-icon>\n          <span>Logout</span>\n        </button>\n      </mat-menu>\n    </ng-container>\n    \n    <!-- Authentication links for guests -->\n    <ng-container *ngIf=\"!isAuthenticated\">\n      <button mat-button routerLink=\"/login\" routerLinkActive=\"active\">\n        <mat-icon>login</mat-icon>\n        <span class=\"nav-label\">Login</span>\n      </button>\n      \n      <button mat-button routerLink=\"/register\" routerLinkActive=\"active\">\n        <mat-icon>person_add</mat-icon>\n        <span class=\"nav-label\">Register</span>\n      </button>\n    </ng-container>\n  </div>\n</mat-toolbar>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}