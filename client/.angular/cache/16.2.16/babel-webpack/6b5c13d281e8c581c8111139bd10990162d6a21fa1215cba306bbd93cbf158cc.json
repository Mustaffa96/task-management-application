{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/list\";\nimport * as i6 from \"@angular/material/divider\";\nfunction SidenavComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"mat-icon\", 5);\n    i0.ɵɵtext(3, \"account_circle\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 6)(5, \"div\", 7);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r0.userName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.userEmail);\n  }\n}\nfunction SidenavComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 9)(2, \"mat-icon\", 10);\n    i0.ɵɵtext(3, \"dashboard\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 11);\n    i0.ɵɵtext(5, \"Dashboard\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"a\", 12)(7, \"mat-icon\", 10);\n    i0.ɵɵtext(8, \"assignment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"span\", 11);\n    i0.ɵɵtext(10, \"My Tasks\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"a\", 13)(12, \"mat-icon\", 10);\n    i0.ɵɵtext(13, \"assignment_ind\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"span\", 11);\n    i0.ɵɵtext(15, \"Assigned to Me\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"a\", 14)(17, \"mat-icon\", 10);\n    i0.ɵɵtext(18, \"add_circle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"span\", 11);\n    i0.ɵɵtext(20, \"Create Task\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(21, \"mat-divider\");\n    i0.ɵɵelementStart(22, \"a\", 15)(23, \"mat-icon\", 10);\n    i0.ɵɵtext(24, \"person\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"span\", 11);\n    i0.ɵɵtext(26, \"Profile\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction SidenavComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 16)(2, \"mat-icon\", 10);\n    i0.ɵɵtext(3, \"login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 11);\n    i0.ɵɵtext(5, \"Login\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"a\", 17)(7, \"mat-icon\", 10);\n    i0.ɵɵtext(8, \"person_add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"span\", 11);\n    i0.ɵɵtext(10, \"Register\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n/**\n * Sidenav component\n * Contains navigation links and user information\n */\nexport class SidenavComponent {\n  /**\n   * Constructor\n   * @param authService Authentication service\n   */\n  constructor(authService) {\n    this.authService = authService;\n    /**\n     * Flag to track if user is authenticated\n     */\n    this.isAuthenticated = false;\n    /**\n     * User's name for display\n     */\n    this.userName = '';\n    /**\n     * User's email for display\n     */\n    this.userEmail = '';\n  }\n  /**\n   * Lifecycle hook that is called after component initialization\n   * Subscribes to authentication state changes\n   */\n  ngOnInit() {\n    this.authSubscription = this.authService.user.subscribe(user => {\n      // Update authentication state\n      this.isAuthenticated = !!user;\n      // Update user information if authenticated\n      if (user) {\n        this.userName = user.name;\n        this.userEmail = user.email;\n      }\n    });\n  }\n  /**\n   * Lifecycle hook that is called when component is destroyed\n   * Cleans up subscriptions to prevent memory leaks\n   */\n  ngOnDestroy() {\n    if (this.authSubscription) {\n      this.authSubscription.unsubscribe();\n    }\n  }\n  static {\n    this.ɵfac = function SidenavComponent_Factory(t) {\n      return new (t || SidenavComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SidenavComponent,\n      selectors: [[\"app-sidenav\"]],\n      decls: 5,\n      vars: 3,\n      consts: [[1, \"sidenav-container\"], [\"class\", \"user-profile\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"user-profile\"], [1, \"avatar\"], [1, \"avatar-icon\"], [1, \"user-info\"], [1, \"user-name\"], [1, \"user-email\"], [\"mat-list-item\", \"\", \"routerLink\", \"/tasks\", \"routerLinkActive\", \"active\"], [\"matListItemIcon\", \"\"], [\"matListItemTitle\", \"\"], [\"mat-list-item\", \"\", \"routerLink\", \"/tasks/my-tasks\", \"routerLinkActive\", \"active\"], [\"mat-list-item\", \"\", \"routerLink\", \"/tasks/assigned\", \"routerLinkActive\", \"active\"], [\"mat-list-item\", \"\", \"routerLink\", \"/tasks/create\", \"routerLinkActive\", \"active\"], [\"mat-list-item\", \"\", \"routerLink\", \"/profile\", \"routerLinkActive\", \"active\"], [\"mat-list-item\", \"\", \"routerLink\", \"/login\", \"routerLinkActive\", \"active\"], [\"mat-list-item\", \"\", \"routerLink\", \"/register\", \"routerLinkActive\", \"active\"]],\n      template: function SidenavComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, SidenavComponent_div_1_Template, 9, 2, \"div\", 1);\n          i0.ɵɵelementStart(2, \"mat-nav-list\");\n          i0.ɵɵtemplate(3, SidenavComponent_ng_container_3_Template, 27, 0, \"ng-container\", 2);\n          i0.ɵɵtemplate(4, SidenavComponent_ng_container_4_Template, 11, 0, \"ng-container\", 2);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isAuthenticated);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isAuthenticated);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isAuthenticated);\n        }\n      },\n      dependencies: [i2.NgIf, i3.RouterLink, i3.RouterLinkActive, i4.MatIcon, i5.MatNavList, i5.MatListItem, i5.MatListItemIcon, i6.MatDivider, i5.MatListItemTitle],\n      styles: [\"\\n\\n.sidenav-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n}\\n\\n\\n\\n.user-profile[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  padding: 16px;\\n  background-color: #3f51b5;\\n  color: white;\\n}\\n\\n\\n\\n.avatar[_ngcontent-%COMP%] {\\n  margin-right: 16px;\\n}\\n\\n\\n\\n.avatar-icon[_ngcontent-%COMP%] {\\n  font-size: 40px;\\n  height: 40px;\\n  width: 40px;\\n}\\n\\n\\n\\n.user-info[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n}\\n\\n\\n\\n.user-name[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n  font-size: 16px;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n\\n\\n.user-email[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  opacity: 0.8;\\n}\\n\\n\\n\\n.active[_ngcontent-%COMP%] {\\n  background-color: rgba(63, 81, 181, 0.1);\\n  color: #3f51b5;\\n}\\n.active[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%] {\\n  color: #3f51b5;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29yZS9jb21wb25lbnRzL3NpZGVuYXYvc2lkZW5hdi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBQTtBQUNBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBLHlCQUFBO0FBQ0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EseUJBQUE7RUFDQSxZQUFBO0FBQ0Y7O0FBRUEsa0JBQUE7QUFDQTtFQUNFLGtCQUFBO0FBQ0Y7O0FBRUEsZ0JBQUE7QUFDQTtFQUNFLGVBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtBQUNGOztBQUVBLCtCQUFBO0FBQ0E7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUVBLGNBQUE7QUFDQTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtBQUNGOztBQUVBLGVBQUE7QUFDQTtFQUNFLGVBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsdUJBQUE7RUFDQSxZQUFBO0FBQ0Y7O0FBRUEsd0JBQUE7QUFDQTtFQUNFLHdDQUFBO0VBQ0EsY0FBQTtBQUNGO0FBQ0U7RUFDRSxjQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBTaWRlbmF2IGNvbnRhaW5lciBzdHlsZXMgKi9cbi5zaWRlbmF2LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLyogVXNlciBwcm9maWxlIHNlY3Rpb24gKi9cbi51c2VyLXByb2ZpbGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiAxNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y1MWI1O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi8qIEF2YXRhciBzdHlsZXMgKi9cbi5hdmF0YXIge1xuICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG59XG5cbi8qIEF2YXRhciBpY29uICovXG4uYXZhdGFyLWljb24ge1xuICBmb250LXNpemU6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgd2lkdGg6IDQwcHg7XG59XG5cbi8qIFVzZXIgaW5mb3JtYXRpb24gY29udGFpbmVyICovXG4udXNlci1pbmZvIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogVXNlciBuYW1lICovXG4udXNlci1uYW1lIHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cblxuLyogVXNlciBlbWFpbCAqL1xuLnVzZXItZW1haWwge1xuICBmb250LXNpemU6IDEycHg7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBvcGFjaXR5OiAwLjg7XG59XG5cbi8qIEFjdGl2ZSBsaW5rIHN0eWxpbmcgKi9cbi5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDYzLCA4MSwgMTgxLCAwLjEpO1xuICBjb2xvcjogIzNmNTFiNTtcbiAgXG4gIG1hdC1pY29uIHtcbiAgICBjb2xvcjogIzNmNTFiNTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","userName","userEmail","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","SidenavComponent","constructor","authService","isAuthenticated","ngOnInit","authSubscription","user","subscribe","name","email","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","SidenavComponent_Template","rf","ctx","ɵɵtemplate","SidenavComponent_div_1_Template","SidenavComponent_ng_container_3_Template","SidenavComponent_ng_container_4_Template","ɵɵproperty"],"sources":["C:\\Users\\Asus\\Documents\\GitHub\\task-management-application\\client\\src\\app\\core\\components\\sidenav\\sidenav.component.ts","C:\\Users\\Asus\\Documents\\GitHub\\task-management-application\\client\\src\\app\\core\\components\\sidenav\\sidenav.component.html"],"sourcesContent":["/**\n * Sidenav component\n * Side navigation menu for the application\n */\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * Sidenav component\n * Contains navigation links and user information\n */\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit, OnDestroy {\n  /**\n   * Flag to track if user is authenticated\n   */\n  isAuthenticated = false;\n  \n  /**\n   * User's name for display\n   */\n  userName = '';\n  \n  /**\n   * User's email for display\n   */\n  userEmail = '';\n  \n  /**\n   * Subscription to auth state changes\n   */\n  private authSubscription!: Subscription;\n  \n  /**\n   * Constructor\n   * @param authService Authentication service\n   */\n  constructor(private authService: AuthService) {}\n  \n  /**\n   * Lifecycle hook that is called after component initialization\n   * Subscribes to authentication state changes\n   */\n  ngOnInit(): void {\n    this.authSubscription = this.authService.user.subscribe(user => {\n      // Update authentication state\n      this.isAuthenticated = !!user;\n      \n      // Update user information if authenticated\n      if (user) {\n        this.userName = user.name;\n        this.userEmail = user.email;\n      }\n    });\n  }\n  \n  /**\n   * Lifecycle hook that is called when component is destroyed\n   * Cleans up subscriptions to prevent memory leaks\n   */\n  ngOnDestroy(): void {\n    if (this.authSubscription) {\n      this.authSubscription.unsubscribe();\n    }\n  }\n}\n","<!-- Sidenav container -->\n<div class=\"sidenav-container\">\n  <!-- User profile section (shown when authenticated) -->\n  <div class=\"user-profile\" *ngIf=\"isAuthenticated\">\n    <div class=\"avatar\">\n      <mat-icon class=\"avatar-icon\">account_circle</mat-icon>\n    </div>\n    <div class=\"user-info\">\n      <div class=\"user-name\">{{ userName }}</div>\n      <div class=\"user-email\">{{ userEmail }}</div>\n    </div>\n  </div>\n  \n  <!-- Navigation links -->\n  <mat-nav-list>\n    <!-- Links for authenticated users -->\n    <ng-container *ngIf=\"isAuthenticated\">\n      <!-- Dashboard link -->\n      <a mat-list-item routerLink=\"/tasks\" routerLinkActive=\"active\">\n        <mat-icon matListItemIcon>dashboard</mat-icon>\n        <span matListItemTitle>Dashboard</span>\n      </a>\n      \n      <!-- My Tasks link -->\n      <a mat-list-item routerLink=\"/tasks/my-tasks\" routerLinkActive=\"active\">\n        <mat-icon matListItemIcon>assignment</mat-icon>\n        <span matListItemTitle>My Tasks</span>\n      </a>\n      \n      <!-- Assigned Tasks link -->\n      <a mat-list-item routerLink=\"/tasks/assigned\" routerLinkActive=\"active\">\n        <mat-icon matListItemIcon>assignment_ind</mat-icon>\n        <span matListItemTitle>Assigned to Me</span>\n      </a>\n      \n      <!-- Create Task link -->\n      <a mat-list-item routerLink=\"/tasks/create\" routerLinkActive=\"active\">\n        <mat-icon matListItemIcon>add_circle</mat-icon>\n        <span matListItemTitle>Create Task</span>\n      </a>\n      \n      <!-- Divider -->\n      <mat-divider></mat-divider>\n      \n      <!-- Profile link -->\n      <a mat-list-item routerLink=\"/profile\" routerLinkActive=\"active\">\n        <mat-icon matListItemIcon>person</mat-icon>\n        <span matListItemTitle>Profile</span>\n      </a>\n    </ng-container>\n    \n    <!-- Links for guests -->\n    <ng-container *ngIf=\"!isAuthenticated\">\n      <!-- Login link -->\n      <a mat-list-item routerLink=\"/login\" routerLinkActive=\"active\">\n        <mat-icon matListItemIcon>login</mat-icon>\n        <span matListItemTitle>Login</span>\n      </a>\n      \n      <!-- Register link -->\n      <a mat-list-item routerLink=\"/register\" routerLinkActive=\"active\">\n        <mat-icon matListItemIcon>person_add</mat-icon>\n        <span matListItemTitle>Register</span>\n      </a>\n    </ng-container>\n  </mat-nav-list>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}