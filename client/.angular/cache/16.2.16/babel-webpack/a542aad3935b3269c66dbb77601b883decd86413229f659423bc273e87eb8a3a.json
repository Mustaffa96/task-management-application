{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./core/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/sidenav\";\nimport * as i4 from \"./core/components/header/header.component\";\nimport * as i5 from \"./core/components/footer/footer.component\";\nimport * as i6 from \"./core/components/sidenav/sidenav.component\";\n/**\n * App component\n * Root component of the application\n */\nexport class AppComponent {\n  /**\n   * Constructor\n   * @param authService Authentication service\n   */\n  constructor(authService) {\n    this.authService = authService;\n    /**\n     * Title of the application\n     */\n    this.title = 'Task Management';\n    /**\n     * Flag to track if sidenav should be opened\n     */\n    this.sidenavOpened = false;\n  }\n  /**\n   * Lifecycle hook that is called after component initialization\n   * Attempts to auto-login the user if a valid token exists\n   */\n  ngOnInit() {\n    // Try to auto-login with stored token\n    this.authService.autoLogin();\n  }\n  /**\n   * Toggle sidenav open/closed state\n   */\n  toggleSidenav() {\n    this.sidenavOpened = !this.sidenavOpened;\n  }\n  /**\n   * Close sidenav\n   */\n  closeSidenav() {\n    this.sidenavOpened = false;\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 10,\n      vars: 2,\n      consts: [[1, \"app-container\"], [3, \"toggleSidenav\"], [1, \"sidenav-container\"], [1, \"sidenav\", 3, \"opened\", \"mode\"], [\"sidenav\", \"\"], [1, \"main-content\"], [1, \"content-wrapper\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"app-header\", 1);\n          i0.ɵɵlistener(\"toggleSidenav\", function AppComponent_Template_app_header_toggleSidenav_1_listener() {\n            return ctx.toggleSidenav();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-sidenav-container\", 2)(3, \"mat-sidenav\", 3, 4);\n          i0.ɵɵelement(5, \"app-sidenav\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"mat-sidenav-content\", 5)(7, \"div\", 6);\n          i0.ɵɵelement(8, \"router-outlet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"app-footer\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"opened\", ctx.sidenavOpened)(\"mode\", \"side\");\n        }\n      },\n      dependencies: [i2.RouterOutlet, i3.MatSidenav, i3.MatSidenavContainer, i3.MatSidenavContent, i4.HeaderComponent, i5.FooterComponent, i6.SidenavComponent],\n      styles: [\"\\n\\n.app-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100vh;\\n}\\n\\n\\n\\n.sidenav-container[_ngcontent-%COMP%] {\\n  flex: 1;\\n  height: calc(100vh - 64px); \\n\\n}\\n\\n\\n\\n.sidenav[_ngcontent-%COMP%] {\\n  width: 250px;\\n  background-color: #f5f5f5;\\n  border-right: 1px solid #e0e0e0;\\n}\\n\\n\\n\\n.main-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  min-height: 100%;\\n}\\n\\n\\n\\n.content-wrapper[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 20px;\\n  overflow-y: auto;\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .sidenav[_ngcontent-%COMP%] {\\n    width: 200px;\\n  }\\n  .content-wrapper[_ngcontent-%COMP%] {\\n    padding: 16px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlCQUFBO0FBQ0E7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxhQUFBO0FBQ0Y7O0FBRUEsNkJBQUE7QUFDQTtFQUNFLE9BQUE7RUFDQSwwQkFBQSxFQUFBLDZCQUFBO0FBQ0Y7O0FBRUEsbUJBQUE7QUFDQTtFQUNFLFlBQUE7RUFDQSx5QkFBQTtFQUNBLCtCQUFBO0FBQ0Y7O0FBRUEsd0JBQUE7QUFDQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLGdCQUFBO0FBQ0Y7O0FBRUEsMkJBQUE7QUFDQTtFQUNFLE9BQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQSxzQ0FBQTtBQUNBO0VBQ0U7SUFDRSxZQUFBO0VBQ0Y7RUFFQTtJQUNFLGFBQUE7RUFBRjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyogQXBwIGNvbnRhaW5lciBzdHlsZXMgKi9cbi5hcHAtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuLyogU2lkZW5hdiBjb250YWluZXIgc3R5bGVzICovXG4uc2lkZW5hdi1jb250YWluZXIge1xuICBmbGV4OiAxO1xuICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA2NHB4KTsgLyogQWRqdXN0IGZvciBoZWFkZXIgaGVpZ2h0ICovXG59XG5cbi8qIFNpZGVuYXYgc3R5bGVzICovXG4uc2lkZW5hdiB7XG4gIHdpZHRoOiAyNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2UwZTBlMDtcbn1cblxuLyogTWFpbiBjb250ZW50IHN0eWxlcyAqL1xuLm1haW4tY29udGVudCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG59XG5cbi8qIENvbnRlbnQgd3JhcHBlciBzdHlsZXMgKi9cbi5jb250ZW50LXdyYXBwZXIge1xuICBmbGV4OiAxO1xuICBwYWRkaW5nOiAyMHB4O1xuICBvdmVyZmxvdy15OiBhdXRvO1xufVxuXG4vKiBNZWRpYSBxdWVyeSBmb3IgcmVzcG9uc2l2ZSBkZXNpZ24gKi9cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuc2lkZW5hdiB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICB9XG4gIFxuICAuY29udGVudC13cmFwcGVyIHtcbiAgICBwYWRkaW5nOiAxNnB4O1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["AppComponent","constructor","authService","title","sidenavOpened","ngOnInit","autoLogin","toggleSidenav","closeSidenav","i0","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AppComponent_Template_app_header_toggleSidenav_1_listener","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Asus\\Documents\\GitHub\\task-management-application\\client\\src\\app\\app.component.ts","C:\\Users\\Asus\\Documents\\GitHub\\task-management-application\\client\\src\\app\\app.component.html"],"sourcesContent":["/**\n * Main application component\n * Root component that hosts all other components\n */\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from './core/services/auth.service';\n\n/**\n * App component\n * Root component of the application\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  /**\n   * Title of the application\n   */\n  title = 'Task Management';\n  \n  /**\n   * Flag to track if sidenav should be opened\n   */\n  sidenavOpened = false;\n  \n  /**\n   * Constructor\n   * @param authService Authentication service\n   */\n  constructor(private authService: AuthService) {}\n  \n  /**\n   * Lifecycle hook that is called after component initialization\n   * Attempts to auto-login the user if a valid token exists\n   */\n  ngOnInit(): void {\n    // Try to auto-login with stored token\n    this.authService.autoLogin();\n  }\n  \n  /**\n   * Toggle sidenav open/closed state\n   */\n  toggleSidenav(): void {\n    this.sidenavOpened = !this.sidenavOpened;\n  }\n\n  /**\n   * Close sidenav\n   */\n  closeSidenav(): void {\n    this.sidenavOpened = false;\n  }\n}\n","<!-- Main application layout -->\n<div class=\"app-container\">\n  <!-- Header component -->\n  <app-header (toggleSidenav)=\"toggleSidenav()\"></app-header>\n  \n  <!-- Main content area with sidenav -->\n  <mat-sidenav-container class=\"sidenav-container\">\n    <!-- Side navigation -->\n    <mat-sidenav #sidenav [opened]=\"sidenavOpened\" [mode]=\"'side'\" class=\"sidenav\">\n      <app-sidenav></app-sidenav>\n    </mat-sidenav>\n    \n    <!-- Main content -->\n    <mat-sidenav-content class=\"main-content\">\n      <div class=\"content-wrapper\">\n        <!-- Router outlet for displaying routed components -->\n        <router-outlet></router-outlet>\n      </div>\n      \n      <!-- Footer component -->\n      <app-footer></app-footer>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n"],"mappings":";;;;;;;AAOA;;;;AASA,OAAM,MAAOA,YAAY;EAWvB;;;;EAIAC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAd/B;;;IAGA,KAAAC,KAAK,GAAG,iBAAiB;IAEzB;;;IAGA,KAAAC,aAAa,GAAG,KAAK;EAM0B;EAE/C;;;;EAIAC,QAAQA,CAAA;IACN;IACA,IAAI,CAACH,WAAW,CAACI,SAAS,EAAE;EAC9B;EAEA;;;EAGAC,aAAaA,CAAA;IACX,IAAI,CAACH,aAAa,GAAG,CAAC,IAAI,CAACA,aAAa;EAC1C;EAEA;;;EAGAI,YAAYA,CAAA;IACV,IAAI,CAACJ,aAAa,GAAG,KAAK;EAC5B;;;uBAtCWJ,YAAY,EAAAS,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAZZ,YAAY;MAAAa,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCfzBV,EAAA,CAAAY,cAAA,aAA2B;UAEbZ,EAAA,CAAAa,UAAA,2BAAAC,0DAAA;YAAA,OAAiBH,GAAA,CAAAb,aAAA,EAAe;UAAA,EAAC;UAACE,EAAA,CAAAe,YAAA,EAAa;UAG3Df,EAAA,CAAAY,cAAA,+BAAiD;UAG7CZ,EAAA,CAAAgB,SAAA,kBAA2B;UAC7BhB,EAAA,CAAAe,YAAA,EAAc;UAGdf,EAAA,CAAAY,cAAA,6BAA0C;UAGtCZ,EAAA,CAAAgB,SAAA,oBAA+B;UACjChB,EAAA,CAAAe,YAAA,EAAM;UAGNf,EAAA,CAAAgB,SAAA,iBAAyB;UAC3BhB,EAAA,CAAAe,YAAA,EAAsB;;;UAbAf,EAAA,CAAAiB,SAAA,GAAwB;UAAxBjB,EAAA,CAAAkB,UAAA,WAAAP,GAAA,CAAAhB,aAAA,CAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}